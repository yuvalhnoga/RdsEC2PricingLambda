AWSTemplateFormatVersion: 2010-09-09
Parameters:

  s3bucket:  
    Type: String
    Description: Enter the name of the S3 Bucket with the lambda zipfile. 
    Default: abc

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ['logs:*']
                Resource: 'arn:aws:logs:*:*:*'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess'           
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "CreatePricesCSV"
      Description: "Creates CSV files with prices for each region"
      Timeout: 600
      MemorySize: 2000
      Environment:
        Variables:
          s3_bucket:
            Ref: s3bucket
      Code:
        S3Bucket: 
          Ref: s3bucket
        S3Key: index.py.zip
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt LambdaExecutionRole.Arn

  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "Trigger prices lambda everyday"
      Name: "pricesLambdaDaily"
      ScheduleExpression: "rate(1 day)"
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "LambdaFunction"
              - "Arn"
          Id: "index"
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "LambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ScheduledRule"
          - "Arn"
  CrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole'           
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess'
  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: "ait_organisations_athena_cur_cfn"
        Description: "Prices database"
  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: "price_api"
      Role: !GetAtt CrawlerRole.Arn
      DatabaseName: !Ref GlueDatabase
      Targets:
        S3Targets:
          - Path: !Sub 's3://${s3bucket}/Services/EC2'
          - Path: !Sub 's3://${s3bucket}/Services/RDS'
      SchemaChangePolicy:
        DeleteBehavior: "LOG"
      Configuration: "{\"Version\":1.0,\"Grouping\":{\"TableGroupingPolicy\":\"CombineCompatibleSchemas\"},\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"}}}"

